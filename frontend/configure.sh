#!/bin/bash

# Frontend Configuration Script
# Use this to set the backend URL for different environments

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
CONFIG_FILE="$SCRIPT_DIR/config.js"

# Check if API_BASE_URL environment variable is set
if [ ! -z "$API_BASE_URL" ]; then
    echo "üåç Using API_BASE_URL from environment: $API_BASE_URL"
    
    cat > "$CONFIG_FILE" << EOF
// Frontend Configuration - From Environment Variable
// Source: API_BASE_URL environment variable

window.ENV = {
    API_BASE_URL: '$API_BASE_URL'
};

console.log('üåç Config loaded from environment - API URL:', '$API_BASE_URL');
EOF
    echo "‚úÖ Configuration set from environment variable!"
    echo "üìÇ Config file: $CONFIG_FILE"
    exit 0
fi

# Function to update config
update_config() {
    local api_url="$1"
    local description="$2"
    
    echo "üîß Setting API URL: $api_url ($description)"
    
    cat > "$CONFIG_FILE" << EOF
// Frontend Configuration - Generated by configure.sh
// Environment: $description

window.ENV = {
    API_BASE_URL: '$api_url'
};

console.log('üìù Config loaded - API URL:', '$api_url');
EOF

    echo "‚úÖ Configuration updated successfully!"
    echo "üìÇ Config file: $CONFIG_FILE"
}

# Parse command line arguments
case "${1:-auto}" in
    "local"|"dev"|"development")
        update_config "http://localhost:8080" "Local Development"
        ;;
    "network")
        if [ -z "$2" ]; then
            echo "‚ùå Error: Please provide IP address"
            echo "Usage: $0 network 192.168.1.100"
            exit 1
        fi
        update_config "http://$2:8080" "Local Network"
        ;;
    "prod"|"production")
        if [ -z "$2" ]; then
            echo "‚ùå Error: Please provide domain"
            echo "Usage: $0 production myapp.com"
            exit 1
        fi
        update_config "https://$2:8080" "Production"
        ;;
    "custom")
        if [ -z "$2" ]; then
            echo "‚ùå Error: Please provide full URL"
            echo "Usage: $0 custom https://api.mycompany.com:9000"
            exit 1
        fi
        update_config "$2" "Custom URL"
        ;;
    "auto"|"")
        echo "ü§ñ Setting auto-detection mode"
        cat > "$CONFIG_FILE" << EOF
// Frontend Configuration - Auto-detection mode
// The frontend will automatically detect the backend URL

window.ENV = {
    API_BASE_URL: undefined  // Will use auto-detection
};

console.log('ü§ñ Config loaded - Using auto-detection');
EOF
        echo "‚úÖ Auto-detection mode enabled!"
        ;;
    "help"|"-h"|"--help")
        echo "Frontend Configuration Script"
        echo ""
        echo "Usage: $0 [ENVIRONMENT] [OPTIONS]"
        echo ""
        echo "Environments:"
        echo "  local                     - Local development (http://localhost:8080)"
        echo "  network <IP>              - Local network (http://IP:8080)"
        echo "  production <DOMAIN>       - Production (https://DOMAIN:8080)"
        echo "  custom <URL>              - Custom URL"
        echo "  auto                      - Auto-detection (default)"
        echo ""
        echo "Examples:"
        echo "  $0 local                  # Local development"
        echo "  $0 network 192.168.1.100  # Local network"
        echo "  $0 production myapp.com   # Production"
        echo "  $0 custom https://api.example.com:9000"
        echo "  $0 auto                   # Auto-detection"
        ;;
    *)
        echo "‚ùå Unknown environment: $1"
        echo "Run '$0 help' for usage information"
        exit 1
        ;;
esac